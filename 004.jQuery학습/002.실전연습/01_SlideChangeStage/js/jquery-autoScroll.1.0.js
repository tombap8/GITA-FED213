// 자동 스크롤 JS - jquery-autoScroll.1.0.js

/***************** 전역변수구역 *****************/
// 1. 현재 페이지번호
let pno = 0;
// 2. 전체 페이지수
const totnum = 7;
// 3. 광스크롤 상태변수
let prot_sc = 0; // 0-허용, 1-불허용
// 4. 스크롤 애니메이션 시간
const dur_sc = 600;
// 광스크롤금지시간===스크롤애니시간
// 5. 스크롤 이징
const easing_sc = "easeInOutQuint";



$(() => { ////////// jQB ///////////////////////////


    /************************************************* 
        [ 자동스크롤 구현 ]

        1. 기능: 마우스휠을 위나 아래로 작동시킬때
        페이지가 위나 아래로 자동으로 애니메이션되는 기능

        2. 이벤트: 마우스휠을 움직일때 발생하는 이벤트는?
        - mousewheel (오리지널 이벤트) -> 파이어폭스 지원안함!
        - wheel (신규이벤트-벤더사의 웹표준이 아직아님!)
            -> 엣지, 사파리 지원안함!
        - DOMMouseScroll (파이어폭스 전용이벤트)
        -> 결론적으로 모두 한꺼번에 지원하는 이벤트가 없으므로
        mousewheel + DOMMouseScroll 2개를 같이 사용할 것임!

        3. 마우스 휠 이벤트와 함수를 연결하는 방법:
        - on(이벤트명,함수)
        -> on 메서드로 어떤 이벤트와도 함수를 연결할 수 있다!
        (참고로 bind(이벤트명,함수) 메서드를 사용했었지만
        제이쿼리 버전3부터 지원중단함!)

        4. 마우스 휠 이벤트 대상: 보통 document 에 적용함!

        ->>>>>> 중요한 업데이트 유의사항!!!!
        document, body, window 객체는 이벤트막기를 할 수 없다!
        - 2019년도에 위의 세가지 중요객체에 대하여 기본기능막기를
        할 수 없도록 브라우저 소스가 업데이트 되었는데...이유는?
        모바일에서 에러가 발생하는 문제의 원인으로 지목됨
        본 3가지 중요객체에 대하여 e.preventDefault() 또는
        return false 를 사용한 기능막기를 못하도록 하였다!

        예) 안되는 케이스
        $(document).on("click",function(e){
            e.preventDefault(); -> 에러발생
        });
        $(window).on("click",function(e){
            return false; -> 에러발생
        });
        $("body").on("click",function(e){
            e.preventDefault(); -> 에러발생
        });

        -> 에러를 우회하는 방법은 window, document, body대신
        내부에 전체를 싸는 부모박스를 하나만들고 이것을 대신사용해
        막기셋팅을 할 수 있다!
        스크롤바가 필요치 않다면 스크롤바를 없애면 막기가 필요없다!
        여기서는 스크롤바를 없애는 것으로 대체함!
        
    *************************************************/

    //////////// 자동스크롤 구현 //////////////////
    $(document).on("mousewheel DOMMouseScroll",
        function (e) {
            // 기본스크롤 기능막기 -> 에러로 인해 하지않음!
            // e.preventDefault();
            // return false;
            // -> 대신 css에서 스크롤바를 없애기로 한다!

            // 호출여부확인
            // console.log("스크롤링~");

            // e 이벤트 전달변수 처리하기
            e = window.event || e;
            // 뒤위 2가지 값 중 유효한 값이 e에 재할당됨!
            // window.event 는 오리지널 윈도우 이벤트임

            /******************************* 
                1. 마우스 휠 방향 알아내기!
            *******************************/
            // -> 페이지를 위로갈지 아래로 갈지 결정하기위함!
            // 휠델타값으로 방향을 알아낸다!!
            // e.wheelDelta 는 일반 브라우저용 방향정보
            // e.detail은 파이어폭스용 방향정보
            let delta = e.wheelDelta || e.detail;
            // 변수 = 속성값1 || 속성값2 
            // -> 두가지 속성중 true인것을 변수에 할당함!
            // console.log("휠델타값:",delta);

            /**************************************** 
                2. 방향에 따른 페이지번호 증감하기
            ****************************************/
            if (delta < 0) { // 음수면 스크롤 아랫방향(다음페이지)
                pno++;
                if (pno === totnum) pno = totnum - 1; //끝번호고정!
            } ////////// if ///////////
            else { // 양수면 스크롤 윗방향(이전페이지)
                pno--;
                if (pno === -1) pno = 0; //첫번호에 고정!
            } //////// else /////////////

            console.log("페이지번호:", pno);

            /*********************************************** 
                3. 페이지 높이값에 곱하여 스크롤 이동하기 
            ***********************************************/
            // 이동할 위치 -> 페이지높이값*페이지번호
            let pos = $(window).height() * pno;

            $("html,body").animate({
                scrollTop: pos + "px"
            }, dur_sc, easing_sc);


        }); //////////// mousewheel /////////////////////
    /////////////////////////////////////////////////







}); /////////////// jQB //////////////////////////
//////////////////////////////////////////////////